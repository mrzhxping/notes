import{_ as a,c as e,o as s,e as n}from"./app-CxNA_eHp.js";const i={},l=n(`<h1 id="一些git常用操作" tabindex="-1"><a class="header-anchor" href="#一些git常用操作"><span>一些Git常用操作</span></a></h1><h2 id="修改历史邮箱和用户名" tabindex="-1"><a class="header-anchor" href="#修改历史邮箱和用户名"><span>修改历史邮箱和用户名</span></a></h2><h3 id="_1、拉取要修改的分支" tabindex="-1"><a class="header-anchor" href="#_1、拉取要修改的分支"><span>1、拉取要修改的分支</span></a></h3><p>把要修改的所有分支全部拉取到本地，修改只会修改已拉取到本地分支的记录</p><h3 id="_2、修改命令" tabindex="-1"><a class="header-anchor" href="#_2、修改命令"><span>2、修改命令</span></a></h3><ol><li>该命令使用邮箱匹配，可根据需要自行修改匹配规则；</li><li>一定要将命令中的<code>旧邮箱</code> <code>新用户名</code> <code>新邮箱</code>修改成自己需要的参数；</li><li>看到有<code>rewrite</code>的则表示该分支有修改成功；</li><li>可以使用<code>git log</code>查看具体记录；</li></ol><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="line"><span class="token function">git</span> filter-branch <span class="token parameter variable">-f</span> --env-filter <span class="token string">&#39;</span>
<span class="line highlighted">OLD_EMAIL=&quot;旧邮箱&quot;</span>
<span class="line highlighted">CORRECT_NAME=&quot;新用户名&quot;</span>
<span class="line highlighted">CORRECT_EMAIL=&quot;新邮箱&quot;</span>
<span class="line">if [ &quot;$GIT_COMMITTER_EMAIL&quot; = &quot;$OLD_EMAIL&quot; ]</span>
<span class="line">then</span>
<span class="line">    export GIT_COMMITTER_NAME=&quot;$CORRECT_NAME&quot;</span>
<span class="line">    export GIT_COMMITTER_EMAIL=&quot;$CORRECT_EMAIL&quot;</span>
<span class="line">fi</span>
<span class="line">if [ &quot;$GIT_AUTHOR_EMAIL&quot; = &quot;$OLD_EMAIL&quot; ]</span>
<span class="line">then</span>
<span class="line">    export GIT_AUTHOR_NAME=&quot;$CORRECT_NAME&quot;</span>
<span class="line">    export GIT_AUTHOR_EMAIL=&quot;$CORRECT_EMAIL&quot;</span>
<span class="line">fi</span>
<span class="line">&#39;</span> --tag-name-filter <span class="token function">cat</span> -- <span class="token parameter variable">--branches</span> <span class="token parameter variable">--tags</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3、强推" tabindex="-1"><a class="header-anchor" href="#_3、强推"><span>3、强推</span></a></h3><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="line"><span class="token function">git</span> push origin <span class="token parameter variable">--force</span> <span class="token parameter variable">--all</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="_4、其他" tabindex="-1"><a class="header-anchor" href="#_4、其他"><span>4、其他</span></a></h3><ul><li>执行失败时先清除缓存</li></ul><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="line"><span class="token function">git</span> filter-branch <span class="token parameter variable">-f</span> --index-filter <span class="token string">&#39;git rm --cached --ignore-unmatch Rakefile&#39;</span> HEAD</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="修改历史commit描述" tabindex="-1"><a class="header-anchor" href="#修改历史commit描述"><span>修改历史commit描述</span></a></h2><div class="custom-container danger"><p class="custom-container-title">注意</p><p>此方法修改历史记录commit描述信息会把修改的那条提交后所有的提交记录时间同时修改</p></div><h2 id="id" tabindex="-1"><a class="header-anchor" href="#id"><span>id</span></a></h2><h2 id="修改" tabindex="-1"><a class="header-anchor" href="#修改"><span>修改</span></a></h2>`,16),t=[l];function c(r,d){return s(),e("div",null,t)}const p=a(i,[["render",c],["__file","operations.html.vue"]]),h=JSON.parse('{"path":"/code/git/operations.html","title":"Git常用操作","lang":"zh-CN","frontmatter":{"title":"Git常用操作"},"headers":[{"level":2,"title":"修改历史邮箱和用户名","slug":"修改历史邮箱和用户名","link":"#修改历史邮箱和用户名","children":[{"level":3,"title":"1、拉取要修改的分支","slug":"_1、拉取要修改的分支","link":"#_1、拉取要修改的分支","children":[]},{"level":3,"title":"2、修改命令","slug":"_2、修改命令","link":"#_2、修改命令","children":[]},{"level":3,"title":"3、强推","slug":"_3、强推","link":"#_3、强推","children":[]},{"level":3,"title":"4、其他","slug":"_4、其他","link":"#_4、其他","children":[]}]},{"level":2,"title":"修改历史commit描述","slug":"修改历史commit描述","link":"#修改历史commit描述","children":[]},{"level":2,"title":"id","slug":"id","link":"#id","children":[]},{"level":2,"title":"修改","slug":"修改","link":"#修改","children":[]}],"git":{"updatedTime":1721813550000,"contributors":[{"name":"Mr.zhxping","email":"mrzhxping@gmail.com","commits":1}]},"filePathRelative":"code/git/operations.md"}');export{p as comp,h as data};
